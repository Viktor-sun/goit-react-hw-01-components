{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/Container/Container.module.css","components/FriendListItem/FriendListItem.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Container/Container.js","images/Profile.jpg","components/Profile/Profile.js","components/Statistics/Statistics.js","images/FriendList.svg","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistoryItem/TransactionHistoryItem.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Profile","name","tag","location","avatar","stats","followers","views","likes","description","src","alt","width","label","defaultProps","imgProfile","Statistics","title","statistics","statList","map","id","percentage","item","style","backgroundColor","Math","floor","random","toString","IconIsOnline","styled","span","props","isOnline","FriendListItem","defaultIcon","FriendList","friends","friendList","TransactionHistoryItem","type","amount","currency","TransactionHistory","items","transactionHistory","protoTypes","PropTypes","arrayOf","shape","string","isRequired","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27995898.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"Profile_description__KxMEN\",\"avatar\":\"Profile_avatar__3CXRq\",\"name\":\"Profile_name__3ch8i\",\"stats\":\"Profile_stats__3GNqL\",\"label\":\"Profile_label__2CncN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3Stj6\",\"title\":\"Statistics_title__3WspF\",\"statList\":\"Statistics_statList__2gxDO\",\"item\":\"Statistics_item__13-Rx\",\"label\":\"Statistics_label__3siR9\",\"percentage\":\"Statistics_percentage__3QXpu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList___0Bdp\",\"item\":\"FriendList_item__1kY-1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1XIeX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"FriendListItem_name__3NHQ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1kHKC\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","export default __webpack_public_path__ + \"static/media/Profile.f2cc3cdb.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport imgProfile from '../../images/Profile.jpg';\nimport styles from './Profile.module.css';\n\nconst Profile = ({\n  name,\n  tag,\n  location,\n  avatar,\n  stats: { followers, views, likes },\n}) => (\n  <div className=\"profile\">\n    <div className={styles.description}>\n      <img\n        className={styles.avatar}\n        src={avatar}\n        alt=\"Аватар пользователя\"\n        width=\"300\"\n      />\n      <p className={styles.name}>{name}</p>\n      <p className=\"tag\">{tag}</p>\n      <p className=\"location\">{location}</p>\n    </div>\n\n    <ul className={styles.stats}>\n      <li>\n        <span className={styles.label}>Followers</span>\n        <span className=\"quantity\">{followers}</span>\n      </li>\n      <li>\n        <span className={styles.label}>Views</span>\n        <span className=\"quantity\">{views}</span>\n      </li>\n      <li>\n        <span className={styles.label}>Likes</span>\n        <span className=\"quantity\">{likes}</span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.defaultProps = {\n  avatar: imgProfile,\n  tag: 'I have not tag',\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nfunction randomColor() {\n  return '#' + Math.floor(Math.random() * 16777215).toString(16);\n}\n\nconst Statistics = ({ title, stats }) => (\n  <section className={styles.statistics}>\n    {title && <h2 className={styles.title}>{title}</h2>}\n\n    <ul className={styles.statList}>\n      {stats.map(({ id, label, percentage }) => (\n        <li\n          className={styles.item}\n          style={{ backgroundColor: randomColor() }}\n          key={id}\n        >\n          <span className={styles.label}>{label}</span>\n          <span className={styles.percentage}>{percentage}</span>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nStatistics.defaultProps = {\n  title: '',\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default Statistics;\n","export default __webpack_public_path__ + \"static/media/FriendList.b7b84c11.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport styles from './FriendListItem.module.css';\nimport defaultIcon from '../../images/FriendList.svg';\n\nconst IconIsOnline = styled.span`\n  display: block;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  margin-right: 20px;\n  background-color: ${props => (props.isOnline ? 'green' : 'brown')};\n`;\n\nconst FriendListItem = ({ avatar, name, isOnline }) => (\n  <>\n    {/*classic variant */}\n    {/* <span className={isOnline ? styles.online : styles.offline}></span> */}\n    {/*styled-components variant */}\n    <IconIsOnline isOnline={isOnline} />\n    <img className=\"avatar\" src={avatar} alt={name} width=\"48\" />\n    <p className={styles.name}>{name}</p>\n  </>\n);\n\nFriendListItem.defaultProps = {\n  avatar: defaultIcon,\n  isOnline: false,\n};\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool,\n};\n\nexport default FriendListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FriendListItem from '../FriendListItem/FriendListItem';\nimport styles from './FriendList.module.css';\n\nconst FriendList = ({ friends }) => (\n  <ul className={styles.friendList}>\n    {friends.map(({ id, avatar, name, isOnline }) => (\n      <li className={styles.item} key={id}>\n        <FriendListItem avatar={avatar} name={name} isOnline={isOnline} />\n      </li>\n    ))}\n  </ul>\n);\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TransactionHistoryItem = ({ type, amount, currency }) => (\n  <>\n    <td>{type}</td>\n    <td>{amount}</td>\n    <td>{currency}</td>\n  </>\n);\n\nTransactionHistoryItem.defaultProps = {\n  type: 'no data',\n  amount: 'no data',\n  currency: 'no data',\n};\n\nTransactionHistoryItem.propTypes = {\n  type: PropTypes.string,\n  amount: PropTypes.string,\n  currency: PropTypes.string,\n};\n\nexport default TransactionHistoryItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TransactionHistoryItem from '../TransactionHistoryItem/TransactionHistoryItem';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => (\n  <table className={styles.transactionHistory}>\n    <thead>\n      <tr>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {items.map(({ id, type, amount, currency }) => (\n        <tr key={id}>\n          <TransactionHistoryItem\n            type={type}\n            amount={amount}\n            currency={currency}\n          />\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.protoTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport Container from './components/Container/Container';\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\n\nimport user from './data/user.json';\nimport statisticalData from './data/statistical-data.json';\nimport friends from './data/friends.json';\nimport transactions from './data/transactions.json';\n\nconst App = () => (\n  <Container>\n    <Profile\n      name={user.name}\n      tag={user.tag}\n      location={user.location}\n      avatar={user.avatar}\n      stats={user.stats}\n    />\n    <Statistics title=\"Upload stats\" stats={statisticalData} />\n    <FriendList friends={friends} />\n    <TransactionHistory items={transactions} />\n  </Container>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles/common.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}